plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services' // Firebase services
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.driver_durub" // Ensure this matches your Firebase package name
    compileSdk = 34

    defaultConfig {
        applicationId = "com.example.driver_durub" 
        minSdkVersion 23 // Change this line
        targetSdkVersion 31 // You can set this to the latest stable version
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            // Enable code shrinking and resource shrinking
            minifyEnabled true // Enable code shrinking
            shrinkResources true // Enable resource shrinking
            signingConfig = signingConfigs.debug // Change this to your release signing config
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}
